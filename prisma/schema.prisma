// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



      // Users
model users{
  id Int @id @default(autoincrement())

  firstName String @db.VarChar(50)
  lastName String @db.VarChar(50)
  email String @db.VarChar(50)
  mobile String @db.VarChar(20)
  password String @db.VarChar(20)
  otp String @db.VarChar(30) @default("0")


  // relation
  customers customers[]
  categories categories[]
  products products[]
  invoice_products invoice_products[]
  invoices invoices[]


  create_at DateTime @default(now()) @db.Timestamp(0)
  update_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
}


    // Coustomers
model customers{
  id BigInt @id @default(autoincrement())

  name String @db.VarChar(30)
  email String @db.VarChar(50)
  mobile String @db.VarChar(40)

// forgien key
  user_id Int
  users users @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)

  invoices invoices[]

  create_at DateTime @default(now()) @db.Timestamp(0)
  update_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
}



    // Categorys
model categories{
  id BigInt @id @default(autoincrement())

  name String @db.VarChar(50)

  // forgien key
  user_id Int
  users users @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)

  products products[]


  create_at DateTime @default(now()) @db.Timestamp(0)
  update_at DateTime @default(now()) @db.Timestamp(0) @updatedAt 
}


    // Products 
model products {
  id BigInt @id @default(autoincrement())

  name String @db.VarChar(50)
  price String @db.VarChar(10)
  unit String @db.VarChar(50)
  img_url String @db.VarChar(54)

  // forgien key
  user_id Int
  users users @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  category_id BigInt   
  categories categories @relation(fields: [category_id],references: [id],onDelete: Restrict,onUpdate: Cascade)

  invoice_products invoice_products[]

  create_at DateTime @default(now()) @db.Timestamp(0)
  update_at DateTime @default(now()) @db.Timestamp(0) @updatedAt 
}


    // invoice Products
model invoice_products{
  id BigInt @id @default(autoincrement())

  qty  String @db.VarChar(50)
  sale_price String @db.VarChar(50)

  // forgien key
  invoice_id BigInt
  invoices invoices @relation(fields: [invoice_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  product_id BigInt
  products products @relation(fields: [product_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  user_id Int
  users users @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade) 

  create_at DateTime @default(now()) @db.Timestamp(0)
  update_at DateTime @default(now()) @db.Timestamp(0) @updatedAt 
}



    // invoices
model invoices{
  id BigInt @id @default(autoincrement())

  total String @db.VarChar(50)
  discount String @db.VarChar(50)
  vat String @db.VarChar(50)
  payble String @db.VarChar(10)

  // forgien key
  user_id Int
  users users @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade) 
  customer_id BigInt
  customers customers @relation(fields: [customer_id],references: [id],onDelete: Restrict,onUpdate: Cascade)

  invoice_products invoice_products[]

  create_at DateTime @default(now()) @db.Timestamp(0)
  update_at DateTime @default(now()) @db.Timestamp(0) @updatedAt 
}